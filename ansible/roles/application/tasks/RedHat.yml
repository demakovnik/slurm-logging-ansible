---
- name: "Install app dependencies"
  ansible.builtin.yum: 
    name: '{{ application_dependencies }}'
    state: latest 
    update_cache: yes

- name: "Check if we are having app directories"
  ansible.builtin.stat:
    path: /apps/{{ application_name }}
  register: app_files

- name: Create a directory if it does not exist
  become: true
  become_user: root
  ansible.builtin.file:
    path: /root/.ssh
    state: directory
    mode: '0755'
    owner: 'root'
    group: 'root'

- name: 'Copy private key for git'
  become: true
  become_user: "root"
  ansible.builtin.copy:
    src: 'ssh-keys/ansible'
    dest: /root/.ssh/ansible
    owner: "root"
    group: "root"
    mode: '0600'

- name: 'Clone repository'
  become: true
  become_user: 'root'
  ansible.builtin.git:
      repo: "{{ GIT_REPO }}"
      dest: "/apps/{{ application_name }}"
      key_file: "{{ GIT_SSH_KEY }}"
      accept_hostkey: true
  when: "not app_files.stat.exists"

- name: "Install app with bundler module"
  community.general.bundler:
    state: present
    deployment_mode: yes
    chdir: /apps/{{ application_name }}
    executable: /usr/local/bin/bundle
    extra_args: --clean --no-cache
    exclude_groups: development

- name: "Check if we are having app directories"
  ansible.builtin.stat:
    path: /etc/systemd/system/{{ application_name }}.service
  register: service_file

- name: "Copy a service file"
  ansible.builtin.template:
    src: service.j2
    dest: /etc/systemd/system/{{ application_name }}.service
  when: not service_file.stat.exists

- name: "Start app service"
  ansible.builtin.systemd:
    name: '{{ application_name }}'
    state: started
    enabled: true
    daemon_reload: true

- name: "Copy a nginx.conf file"
  ansible.builtin.copy:
    src: /apps/{{ application_name }}/config/nginx.conf
    dest: /etc/nginx/nginx.conf
    remote_src: true

- name: "Copy a robots.txt file"
  ansible.builtin.copy:
    src: /apps/{{ application_name }}/public/robots.txt 
    dest: /apps/{{ application_name }}/app/assets/robots.txt
    remote_src: true

- name: "Replace nginx.conf path"
  ansible.builtin.shell: sed -i 's+/app/public+/apps/{{application_name}}/app/assets+' /etc/nginx/nginx.conf

 
