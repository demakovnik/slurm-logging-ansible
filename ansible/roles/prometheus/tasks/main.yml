---
# tasks file for prometheus
- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yml"

- name: check if prometheus exist
  stat:
    path: "{{ prometheus_bin }}"
  register: __check_prometheus_present
- name: check if prometheus file with startup keys exist
  stat:
    path: "{{ environment_directory }}/{{ environment_file }}"
  register: __check_prometheus_keys_present
- name: create prometheus user
  user:
    name: "{{ prometheus_user }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false
- name: create prometheus config dir
  file:
    path: "{{ prometheus_dir_conf }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
- name: if prometheus exist get version
  shell: "cat {{ prometheus_service_file }} | grep Version | sed s/'.*Version '//g"
  when: __check_prometheus_present.stat.exists == true
  changed_when: false
  register: __get_prometheus_version
  
- name: download and unzip prometheus if not exist
  unarchive:
    src: "{{ prometheus_install_archive_file_link }}"
    dest: /tmp/
    remote_src: yes
    validate_certs: no
- name: move the binary to the final destination
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
    dest: "{{ prometheus_bin }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
    remote_src: yes
  when: __check_prometheus_present.stat.exists == false or not __get_prometheus_version.stdout == prometheus_version
- name: Copy prometheus config file on the remote machine
  ansible.builtin.copy:
    src: /tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus.yml
    dest: "{{ prometheus_dir_conf }}"
    remote_src: yes
- name: create prometheus tsdb dir
  file:
    path: "{{ prometheus_tsdb_path }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
- name: clean
  file:
    path: /tmp/prometheus-{{ prometheus_version }}.linux-amd64/
    state: absent
    
- name: install prometheus keys file
  ansible.builtin.template:
    src: prometheus.j2
    dest: "{{ environment_directory }}/{{ environment_file }}"
    owner: root
    group: root
    mode: 0660

- name: install service
  ansible.builtin.template:
    src: prometheus.service.j2
    dest: "{{ prometheus_service_file }}"
    owner: root
    group: root
    mode: 0660
  notify: reload_daemon_and_restart_prometheus
- meta: flush_handlers
- name: service always started
  ansible.builtin.systemd:
    name: prometheus
    state: started
    enabled: true